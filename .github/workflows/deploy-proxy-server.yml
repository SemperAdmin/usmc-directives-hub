# GitHub Actions Workflow for Deploying Proxy Server
# This workflow uses GitHub Repository Secrets for API keys

name: Deploy Proxy Server

on:
  push:
    branches:
      - main
      - master
    paths:
      - 'proxy-server/**'
  workflow_dispatch: # Allow manual trigger

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: proxy-server/package-lock.json

      - name: Install dependencies
        working-directory: ./proxy-server
        run: npm ci

      - name: Run tests (if you have any)
        working-directory: ./proxy-server
        run: |
          # npm test (uncomment when you add tests)
          echo "No tests configured yet"

      # Deploy to Render.com (ENABLED)
      - name: Deploy to Render
        if: github.ref == 'refs/heads/main'
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          echo "🚀 Deploying to Render..."
          echo "Using GitHub Secrets for API keys:"
          echo "  - YOUTUBE_API_KEY: [configured]"
          echo "  - GEMINI_API_KEY: [configured]"
          echo "  - SEMPER_ADMIN_API_KEY: [configured]"

          # Deploy using Render API
          if [ -n "$RENDER_API_KEY" ] && [ -n "$RENDER_SERVICE_ID" ]; then
            curl -X POST "https://api.render.com/v1/services/${RENDER_SERVICE_ID}/deploys" \
              -H "Authorization: Bearer ${RENDER_API_KEY}" \
              -H "Content-Type: application/json" \
              -d '{}'
            echo "✅ Deployment triggered successfully!"
            echo "⏳ Render will build and deploy in ~2-3 minutes"
            echo "🔐 Environment variables (YOUTUBE_API_KEY, GEMINI_API_KEY, SEMPER_ADMIN_API_KEY) must be set in Render dashboard"
          else
            echo "⚠️  RENDER_API_KEY or RENDER_SERVICE_ID not set in GitHub Secrets"
            echo "📝 Skipping API-based deployment - Render will auto-deploy via GitHub integration"
            echo "✅ This is OK if you're using Render's GitHub auto-deploy feature"
          fi

      # Heroku deployment (DISABLED - set to true to enable)
      - name: Deploy to Heroku
        if: false
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: usmc-directives-proxy
        run: |
          # Install Heroku CLI
          curl https://cli-assets.heroku.com/install.sh | sh

          # Set Heroku config vars (environment variables) using GitHub Secrets
          heroku config:set YOUTUBE_API_KEY="${{ secrets.YOUTUBE_API_KEY }}" --app $HEROKU_APP_NAME
          heroku config:set GEMINI_API_KEY="${{ secrets.GEMINI_API_KEY }}" --app $HEROKU_APP_NAME
          heroku config:set YOUTUBE_CHANNEL_ID="UCob5u7jsXrdca9vmarYJ0Cg" --app $HEROKU_APP_NAME

          # Deploy
          git subtree push --prefix proxy-server heroku main

      # Custom server deployment (DISABLED - set to true to enable)
      - name: Deploy to Custom Server
        if: false
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_HOST: ${{ secrets.SERVER_HOST }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          # Setup SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

          # Deploy files
          rsync -avz -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
            ./proxy-server/ ${SERVER_USER}@${SERVER_HOST}:/opt/usmc-directives-proxy/

          # Set environment variables and restart service
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ${SERVER_USER}@${SERVER_HOST} \
            "cd /opt/usmc-directives-proxy && \
            echo 'YOUTUBE_API_KEY=${YOUTUBE_API_KEY}' > .env && \
            echo 'GEMINI_API_KEY=${GEMINI_API_KEY}' >> .env && \
            echo 'YOUTUBE_CHANNEL_ID=UCob5u7jsXrdca9vmarYJ0Cg' >> .env && \
            chmod 600 .env && \
            npm install --production && \
            (pm2 restart usmc-directives-proxy || pm2 start server.js --name usmc-directives-proxy)"

      - name: Deployment Summary
        run: |
          echo "✅ Deployment completed!"
          echo "🔐 API keys loaded from GitHub Secrets"
          echo "📡 Server will use YOUTUBE_API_KEY, GEMINI_API_KEY, and SEMPER_ADMIN_API_KEY from environment"
